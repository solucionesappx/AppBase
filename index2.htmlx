<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Pestañas Interactivo</title>
    <!-- Carga de Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Estilos personalizados para la fuente Inter y asegurar que el fondo sea blanco */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc; /* Color de fondo claro */
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh; /* Asegura que ocupe toda la altura de la ventana */
            margin: 0;
        }
        /* Estilo para el contenedor principal de las pestañas */
        .tabs-container {
            max-width: 800px;
            width: 95%; /* Ancho fluido para responsividad */
            background-color: #ffffff;
            border-radius: 12px; /* Esquinas redondeadas */
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); /* Sombra sutil */
            overflow: hidden; /* Asegura que el contenido no se desborde */
        }
        /* Contenedor de navegación de pestañas con desplazamiento y posición relativa para el icono */
        .tabs-nav-wrapper {
            position: relative; /* Necesario para posicionar el icono de desplazamiento */
            border-bottom: 1px solid #cbd5e1; /* Borde inferior para la barra de pestañas */
        }
        /* Estilo para los botones de las pestañas */
        .tab-button {
            padding: 1rem 1.5rem;
            cursor: pointer;
            border: none;
            background-color: #e2e8f0; /* Color de fondo para pestañas inactivas */
            color: #475569; /* Color de texto para pestañas inactivas */
            font-weight: 600;
            transition: background-color 0.3s ease, color 0.3s ease;
            border-radius: 0.5rem 0.5rem 0 0; /* Esquinas superiores redondeadas */
            margin-right: 2px; /* Pequeño espacio entre pestañas */
            white-space: nowrap; /* Evita que el texto se rompa */
            flex-shrink: 0; /* Evita que los botones se encojan */
            font-size: 0.875rem; /* text-sm para pantallas pequeñas */
        }
        /* Tamaño de fuente base para pantallas medianas y grandes */
        @media (min-width: 640px) { /* sm: breakpoint de Tailwind */
            .tab-button {
                font-size: 1rem; /* text-base */
            }
        }
        /* Estilo para el botón de pestaña activo */
        .tab-button.active {
            background-color: #ffffff; /* Fondo blanco para la pestaña activa */
            color: #1e3a8a; /* Color azul oscuro para el texto activo */
            border-bottom: 2px solid #3b82f6; /* Borde inferior azul para indicar activo */
            z-index: 10; /* Para que parezca que está por encima de la línea */
            position: relative;
        }
        /* Estilo para los paneles de contenido de las pestañas */
        .tab-pane {
            display: none; /* Oculta los paneles por defecto */
            padding: 1.5rem;
            /* El borde superior se mueve al wrapper de la navegación para evitar doble borde */
        }
        /* Estilo para el panel de contenido activo */
        .tab-pane.active {
            display: block; /* Muestra el panel activo */
        }
        /* Estilo para permitir el desplazamiento horizontal en el contenedor de navegación */
        .tabs-nav {
            overflow-x: auto; /* Permite el desplazamiento horizontal */
            -webkit-overflow-scrolling: touch; /* Mejora el desplazamiento en iOS */
            scrollbar-width: none; /* Oculta la barra de desplazamiento para Firefox */
            display: flex; /* Asegura que los botones estén en línea */
            flex-wrap: nowrap; /* Evita que los botones salten de línea */
            padding-right: 2rem; /* Espacio para el icono de desplazamiento */
        }
        /* Oculta la barra de desplazamiento para navegadores basados en WebKit (Chrome, Safari) */
        .tabs-nav::-webkit-scrollbar {
            display: none;
        }
        /* Estilo para el icono de desplazamiento */
        .scroll-indicator {
            position: absolute;
            right: 0.5rem; /* Ajusta la posición desde la derecha */
            top: 50%;
            transform: translateY(-50%);
            color: #64748b; /* Color del icono */
            pointer-events: none; /* Permite hacer clic a través del icono en las pestañas */
            z-index: 11; /* Asegura que esté por encima de las pestañas */
            display: none; /* Oculto por defecto */
        }
        /* Muestra el icono de desplazamiento solo en pantallas pequeñas (hasta sm) */
        @media (max-width: 639px) { /* sm: breakpoint de Tailwind */
            .scroll-indicator {
                display: block;
            }
        }
    </style>
</head>
<body>

    <div class="tabs-container">
        <!-- Contenedor de navegación de pestañas con wrapper para el icono de desplazamiento -->
        <div class="tabs-nav-wrapper">
            <div class="tabs-nav" id="tabs-nav-scroll-area">
                <button class="tab-button active" id="tab1-button" data-tab="tab1" role="tab" aria-selected="true" aria-controls="tab1">
                    Información General
                </button>
                <button class="tab-button" id="tab2-button" data-tab="tab2" role="tab" aria-selected="false" aria-controls="tab2">
                    Detalles del Producto
                </button>
                <button class="tab-button" id="tab3-button" data-tab="tab3" role="tab" aria-selected="false" aria-controls="tab3">
                    Preguntas Frecuentes
                </button>
                <button class="tab-button" id="tab4-button" data-tab="tab4" role="tab" aria-selected="false" aria-controls="tab4">
                    Contacto
                </button>
                <button class="tab-button" id="tab5-button" data-tab="tab5" role="tab" aria-selected="false" aria-controls="tab5">
                    Novedades
                </button>
                <button class="tab-button" id="tab6-button" data-tab="tab6" role="tab" aria-selected="false" aria-controls="tab6">
                    Testimonios
                </button>
            </div>
            <!-- Icono de desplazamiento para indicar más pestañas -->
            <div class="scroll-indicator">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path id="scroll-indicator-path" stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
                </svg>
            </div>
        </div>

        <!-- Contenedor del contenido de las pestañas -->
        <div class="tabs-content">
            <!-- Panel de la Pestaña 1 -->
            <div id="tab1" class="tab-pane active" role="tabpanel" aria-labelledby="tab1-button">
                <p class="text-gray-600">Cargando contenido...</p>
            </div>

            <!-- Panel de la Pestaña 2 -->
            <div id="tab2" class="tab-pane" role="tabpanel" aria-labelledby="tab2-button">
                <p class="text-gray-600">Cargando contenido...</p>
            </div>

            <!-- Panel de la Pestaña 3 -->
            <div id="tab3" class="tab-pane" role="tabpanel" aria-labelledby="tab3-button">
                <p class="text-gray-600">Cargando contenido...</p>
            </div>

            <!-- Panel de la Pestaña 4 -->
            <div id="tab4" class="tab-pane" role="tabpanel" aria-labelledby="tab4-button">
                <p class="text-gray-600">Cargando contenido...</p>
            </div>

            <!-- Panel de la Pestaña 5 (Nueva) -->
            <div id="tab5" class="tab-pane" role="tabpanel" aria-labelledby="tab5-button">
                <p class="text-gray-600">Cargando contenido...</p>
            </div>

            <!-- Panel de la Pestaña 6 (Nueva) -->
            <div id="tab6" class="tab-pane" role="tabpanel" aria-labelledby="tab6-button">
                <p class="text-gray-600">Cargando contenido...</p>
            </div>
        </div>
    </div>

    <script>
        // Datos simulados que provendrían de una API o un archivo JSON
        const tabContentData = {
            tab1: {
                title: "Bienvenido a nuestra sección de Información General",
                paragraphs: [
                    "Aquí encontrarás una visión general de nuestros servicios y la misión de nuestra empresa. Nos dedicamos a ofrecer soluciones innovadoras que se adaptan a las necesidades de nuestros clientes, garantizando siempre la máxima calidad y eficiencia. Explora nuestras diferentes secciones para descubrir todo lo que podemos hacer por ti."
                ],
                image: {
                    src: "https://placehold.co/600x200/a78bfa/ffffff?text=Informacion+General",
                    alt: "Imagen de Información General"
                }
            },
            tab2: {
                title: "Descubre nuestros Productos Exclusivos",
                paragraphs: [
                    "Nuestra gama de productos está diseñada pensando en la durabilidad, el rendimiento y la estética. Desde dispositivos electrónicos de última generación hasta soluciones de software personalizadas, cada artículo es el resultado de una investigación y desarrollo exhaustivos. ¡Encuentra el producto perfecto para ti!"
                ],
                listItems: [
                    "Producto A: Solución de software avanzada.",
                    "Producto B: Dispositivo electrónico de alto rendimiento.",
                    "Producto C: Servicio de consultoría especializada."
                ],
                image: {
                    src: "https://placehold.co/600x200/34d399/ffffff?text=Detalles+del+Producto",
                    alt: "Imagen de Detalles del Producto"
                }
            },
            tab3: {
                title: "Preguntas Frecuentes (FAQ)",
                paragraphs: [
                    "Aquí respondemos a las preguntas más comunes que nuestros clientes suelen tener. Si no encuentras lo que buscas, no dudes en contactarnos directamente."
                ],
                faq: [
                    { question: "¿Cómo puedo realizar un pedido?", answer: "Puedes realizar un pedido a través de nuestra tienda en línea o contactando a nuestro equipo de ventas." },
                    { question: "¿Cuáles son los métodos de pago aceptados?", answer: "Aceptamos tarjetas de crédito, transferencias bancarias y PayPal." }
                ],
                image: {
                    src: "https://placehold.co/600x200/fcd34d/ffffff?text=Preguntas+Frecuentes",
                    alt: "Imagen de Preguntas Frecuentes"
                }
            },
            tab4: {
                title: "Contáctanos",
                paragraphs: [
                    "Si tienes alguna pregunta, comentario o necesitas soporte, no dudes en ponerte en contacto con nosotros. Estamos aquí para ayudarte."
                ],
                contactInfo: {
                    email: "info@ejemplo.com",
                    phone: "+123 456 7890",
                    address: "Calle Ficticia 123, Ciudad Ficticia, País"
                },
                image: {
                    src: "https://placehold.co/600x200/ef4444/ffffff?text=Contacto",
                    alt: "Imagen de Contacto"
                }
            },
            tab5: {
                title: "Últimas Novedades",
                paragraphs: [
                    "Mantente al día con las últimas noticias y actualizaciones de nuestra empresa. Siempre estamos trabajando para mejorar y ofrecerte lo mejor."
                ],
                listItems: [
                    "Lanzamiento de la versión 2.0 de nuestro software.",
                    "Nuevo artículo en nuestro blog: 'El futuro de la tecnología'.",
                    "Webinar gratuito sobre inteligencia artificial."
                ],
                image: {
                    src: "https://placehold.co/600x200/60a5fa/ffffff?text=Novedades",
                    alt: "Imagen de Novedades"
                }
            },
            tab6: {
                title: "Lo que dicen nuestros Clientes",
                paragraphs: [
                    "La satisfacción de nuestros clientes es nuestra prioridad. Lee lo que algunos de ellos tienen que decir sobre su experiencia con sus productos y servicios."
                ],
                testimonials: [
                    { name: "Ana García", quote: "Un servicio excepcional y productos de alta calidad. ¡Totalmente recomendado!" },
                    { name: "Juan Pérez", quote: "Mi experiencia ha sido fantástica, el soporte técnico es muy eficiente." }
                ],
                image: {
                    src: "https://placehold.co/600x200/c084fc/ffffff?text=Testimonios",
                    alt: "Imagen de Testimonios"
                }
            }
        };

        // Función para renderizar el contenido de una pestaña
        function renderTabContent(tabId, tabPaneElement) {
            tabPaneElement.innerHTML = '<p class="text-gray-600">Cargando contenido...</p>'; // Mostrar mensaje de carga
            const content = tabContentData[tabId];

            // Simular un retraso de red
            setTimeout(() => {
                let htmlContent = `<h2 class="text-2xl font-bold text-gray-800 mb-4">${content.title}</h2>`;

                if (content.paragraphs) {
                    content.paragraphs.forEach(p => {
                        htmlContent += `<p class="text-gray-700 leading-relaxed mb-2">${p}</p>`;
                    });
                }

                if (content.listItems) {
                    htmlContent += '<ul class="list-disc list-inside text-gray-700 mt-4 ml-4">';
                    content.listItems.forEach(item => {
                        htmlContent += `<li>${item}</li>`;
                    });
                    htmlContent += '</ul>';
                }

                if (content.faq) {
                    content.faq.forEach(item => {
                        htmlContent += `
                            <div class="mt-4">
                                <h3 class="font-semibold text-lg text-gray-800">${item.question}</h3>
                                <p class="text-gray-600">${item.answer}</p>
                            </div>
                        `;
                    });
                }

                if (content.contactInfo) {
                    htmlContent += `
                        <p class="text-gray-700 mt-4">
                            <strong>Email:</strong> ${content.contactInfo.email}<br>
                            <strong>Teléfono:</strong> ${content.contactInfo.phone}<br>
                            <strong>Dirección:</strong> ${content.contactInfo.address}
                        </p>
                    `;
                }

                if (content.testimonials) {
                    content.testimonials.forEach(item => {
                        htmlContent += `
                            <div class="mt-4 p-4 bg-gray-50 rounded-lg shadow-sm">
                                <p class="text-gray-800 italic">"${item.quote}"</p>
                                <p class="text-gray-600 text-right mt-2">- ${item.name}</p>
                            </div>
                        `;
                    });
                }

                if (content.image) {
                    htmlContent += `<img src="${content.image.src}" alt="${content.image.alt}" class="w-full h-auto rounded-lg mt-4 shadow-md">`;
                }

                tabPaneElement.innerHTML = htmlContent; // Insertar el contenido generado
            }, 500); // Simula 0.5 segundos de carga
        }

        // Espera a que el DOM esté completamente cargado antes de ejecutar el script
        document.addEventListener('DOMContentLoaded', () => {
            // Selecciona todos los botones de las pestañas
            const tabButtons = document.querySelectorAll('.tab-button');
            // Selecciona todos los paneles de contenido de las pestañas
            const tabPanes = document.querySelectorAll('.tab-pane');
            // Selecciona el área de desplazamiento de las pestañas
            const tabsNavScrollArea = document.getElementById('tabs-nav-scroll-area');
            // Selecciona el elemento path dentro del SVG del indicador de desplazamiento
            const scrollIndicatorPath = document.getElementById('scroll-indicator-path');
            // Selecciona el contenedor del indicador de desplazamiento
            const scrollIndicator = document.querySelector('.scroll-indicator');

            // Rutas SVG para las flechas izquierda y derecha
            const rightArrowPath = "M9 5l7 7-7 7";
            const leftArrowPath = "M15 19l-7-7 7-7";

            // Función para actualizar el icono de desplazamiento
            function updateScrollIndicator() {
                // Comprueba si el área de desplazamiento existe
                if (!tabsNavScrollArea || !scrollIndicatorPath || !scrollIndicator) return;

                const { scrollLeft, scrollWidth, clientWidth } = tabsNavScrollArea;
                const scrollThreshold = 20; // Un pequeño margen para considerar que se ha llegado al final

                // Si no hay necesidad de desplazamiento (todo el contenido cabe), oculta el indicador
                if (scrollWidth <= clientWidth) {
                    scrollIndicator.style.display = 'none';
                    return;
                } else {
                    scrollIndicator.style.display = 'block'; // Asegura que el indicador sea visible si hay desplazamiento
                }

                // Si el usuario ha llegado al final del desplazamiento horizontal
                if (scrollLeft + clientWidth >= scrollWidth - scrollThreshold) {
                    scrollIndicatorPath.setAttribute('d', leftArrowPath); // Cambia a flecha izquierda
                } else {
                    scrollIndicatorPath.setAttribute('d', rightArrowPath); // Vuelve a flecha derecha
                }
            }

            // Itera sobre cada botón de pestaña para añadir un 'event listener' de clic
            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    // Remueve la clase 'active' de todos los botones y paneles
                    tabButtons.forEach(btn => {
                        btn.classList.remove('active');
                        btn.setAttribute('aria-selected', 'false'); // Actualiza el atributo ARIA
                    });
                    tabPanes.forEach(pane => {
                        pane.classList.remove('active');
                    });

                    // Añade la clase 'active' al botón que fue clickeado
                    button.classList.add('active');
                    button.setAttribute('aria-selected', 'true'); // Actualiza el atributo ARIA

                    // Obtiene el ID del panel de contenido asociado al botón clickeado
                    const targetTabId = button.dataset.tab; // 'data-tab' contiene el ID del panel
                    const targetTabPane = document.getElementById(targetTabId);

                    targetTabPane.classList.add('active'); // Muestra el panel
                    renderTabContent(targetTabId, targetTabPane); // Renderiza el contenido dinámicamente

                    // Después de un clic, actualiza el indicador de desplazamiento
                    updateScrollIndicator();
                });
            });

            // Lógica para la navegación con teclado (flechas izquierda/derecha, Home, End)
            tabButtons.forEach((button, index) => {
                button.addEventListener('keydown', (e) => {
                    let nextIndex;
                    if (e.key === 'ArrowRight') {
                        // Mueve a la siguiente pestaña, si es la última, vuelve a la primera
                        nextIndex = (index + 1) % tabButtons.length;
                        tabButtons[nextIndex].focus(); // Mueve el foco al siguiente botón
                        tabButtons[nextIndex].click(); // Simula un clic para activar la pestaña
                        // Desplaza el contenedor para que la pestaña activa sea visible
                        tabsNavScrollArea.scrollLeft = tabButtons[nextIndex].offsetLeft - (tabsNavScrollArea.clientWidth / 2) + (tabButtons[nextIndex].clientWidth / 2);
                    } else if (e.key === 'ArrowLeft') {
                        // Mueve a la pestaña anterior, si es la primera, va a la última
                        nextIndex = (index - 1 + tabButtons.length) % tabButtons.length;
                        tabButtons[nextIndex].focus(); // Mueve el foco al botón anterior
                        tabButtons[nextIndex].click(); // Simula un clic para activar la pestaña
                        // Desplaza el contenedor para que la pestaña activa sea visible
                        tabsNavScrollArea.scrollLeft = tabButtons[nextIndex].offsetLeft - (tabsNavScrollArea.clientWidth / 2) + (tabButtons[nextIndex].clientWidth / 2);
                    } else if (e.key === 'Home') {
                        // Mueve a la primera pestaña
                        e.preventDefault(); // Previene el comportamiento por defecto del navegador
                        tabButtons[0].focus();
                        tabButtons[0].click();
                        tabsNavScrollArea.scrollLeft = 0; // Desplaza al inicio
                    } else if (e.key === 'End') {
                        // Mueve a la última pestaña
                        e.preventDefault(); // Previene el comportamiento por defecto del navegador
                        const lastTabIndex = tabButtons.length - 1;
                        tabButtons[lastTabIndex].focus();
                        tabButtons[lastTabIndex].click();
                        tabsNavScrollArea.scrollLeft = tabsNavScrollArea.scrollWidth; // Desplaza al final
                    }
                    // Después de un evento de teclado, actualiza el indicador de desplazamiento
                    updateScrollIndicator();
                });
            });

            // Añade un listener para el evento 'scroll' en el área de navegación de pestañas
            tabsNavScrollArea.addEventListener('scroll', updateScrollIndicator);

            // Añade un listener para el evento 'resize' de la ventana
            window.addEventListener('resize', updateScrollIndicator);

            // Asegura que la primera pestaña esté activa y visible al cargar la página
            // Esto simula un clic en el primer botón de pestaña
            if (tabButtons.length > 0) {
                tabButtons[0].click();
            }

            // Llama a updateScrollIndicator al cargar para establecer el estado inicial
            updateScrollIndicator();
        });
    </script>
</body>
</html>
